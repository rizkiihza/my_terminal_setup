

#use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-j
unbind-key C-j
bind-key C-j send-prefix
set -g base-index 1

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."
#
# # vi is good
 setw -g mode-keys vi
#
#
 set-option -g default-terminal screen-256color
#
 bind-key : command-prompt
 bind-key r refresh-client
 bind-key L clear-history
#
 bind-key space next-window
 bind-key bspace previous-window
 bind-key enter next-layout
#
# use vim-like keys for splits and windows
 bind-key v split-window -h
 bind-key s split-window -v
 bind-key h select-pane -L
 bind-key j select-pane -D
 bind-key k select-pane -U
 bind-key l select-pane -R
 bind-key a last-pane
 bind-key c new-window
 bind-key q next-window
 bind-key e previous-window

#
# # smart pane switching with awareness of vim splits
 bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
 bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
 bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
 bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
 bind C-l send-keys 'C-l'
#
 bind-key C-o rotate-window
#
 bind-key + select-layout main-horizontal
 bind-key = select-layout main-vertical
 set-window-option -g other-pane-height 25
 set-window-option -g other-pane-width 80
#
#
 bind-key [ copy-mode
 bind-key ] paste-buffer


bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

 set-window-option -g display-panes-time 1500
#
# # Status Bar
 set-option -g status-interval 1
 set-option -g status-left ''
 set-option -g status-right '%l:%M%p'
 set-option -g status-fg default

# Status Bar solarized-dark (default)
 set-option -g status-bg black
#
# Status Bar solarized-light
 if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-bg white"
 if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-fg white"
 if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-fg white"
#
# Set window notifications
 setw -g monitor-activity on
 set -g visual-activity on

#
 # Allow the arrow key to be used immediately after changing windows
 set-option -g repeat-time 0
#











